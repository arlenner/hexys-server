
const isAdjacent = ({x:x1, y:y1}, {x:x2, y:y2}) => 
    x1 % 2 === 0 ?
            (x2 === x1 +1 && y2 === y1 -1)
        ||  (x2 === x1 +1 && y2 === y1)
        ||  (x2 === x1    && y2 === y1 +1)
        ||  (x2 === x1 -1 && y2 === y1 -0)
        ||  (x2 === x1 -1 && y2 === y1 -1)
        ||  (x2 === x1    && y2 === y1 -1)
    :   /**else */
            (x2 === x1 +1 && y2 === y1)
        ||  (x2 === x1 +1 && y2 === y1 +1)
        ||  (x2 === x1    && y2 === y1 +1)
        ||  (x2 === x1 -1 && y2 === y1 +1)
        ||  (x2 === x1 -1 && y2 === y1 -0)
        ||  (x2 === x1    && y2 === y1 -1)

const isJumpable = ({x:x1, y:y1}, {x:x2, y:y2}) =>
    x1 % 2 === 0 ?
            (x2 === x1 - 0  && y2 === y1 - 2)
        ||  (x2 === x1 + 1  && y2 === y1 - 2)
        ||  (x2 === x1 + 2  && y2 === y1 - 1)
        ||  (x2 === x1 + 2  && y2 === y1 + 0)
        ||  (x2 === x1 + 2  && y2 === y1 + 1)
        ||  (x2 === x1 + 1  && y2 === y1 + 1)
        ||  (x2 === x1 + 0  && y2 === y1 + 2)
        ||  (x2 === x1 - 1  && y2 === y1 + 1)
        ||  (x2 === x1 - 1  && y2 === y1 - 2)
        ||  (x2 === x1 - 2  && y2 === y1 + 1)
        ||  (x2 === x1 - 2  && y2 === y1 - 0)
        ||  (x2 === x1 - 2  && y2 === y1 - 1)
    :   
            (x2 === x1 + 0  && y2 === y1 - 2)
        ||  (x2 === x1 + 1  && y2 === y1 - 1)
        ||  (x2 === x1 + 2  && y2 === y1 - 1)
        ||  (x2 === x1 + 2  && y2 === y1 - 0)
        ||  (x2 === x1 + 2  && y2 === y1 + 1)
        ||  (x2 === x1 + 1  && y2 === y1 + 2)
        ||  (x2 === x1 + 0  && y2 === y1 + 2)
        ||  (x2 === x1 - 1  && y2 === y1 + 2)
        ||  (x2 === x1 - 2  && y2 === y1 + 1)
        ||  (x2 === x1 - 2  && y2 === y1 - 0)
        ||  (x2 === x1 - 2  && y2 === y1 - 1)
        ||  (x2 === x1 - 1  && y2 === y1 - 1)

module.exports = { isAdjacent, isJumpable }